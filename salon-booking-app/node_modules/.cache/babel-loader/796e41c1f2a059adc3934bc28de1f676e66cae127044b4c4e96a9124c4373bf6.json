{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { authAction } from '../store/authenticationSlice';\nimport { servicesAction } from '../store/servicesSlice';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nconst useFetch = fetchData => {\n  _s();\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [message, setMessage] = useState(null);\n  const [loading, setLoading] = useState(null);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  console.log(fetchData);\n  const url = fetchData.url;\n  const method = fetchData.method;\n  const headers = fetchData.headers;\n  const body = fetchData.body;\n  const action = fetchData.action;\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(10);\n      setError(null);\n      console.log(url);\n      try {\n        const options = {\n          method,\n          headers\n        };\n        if (body && method !== 'GET') {\n          options.body = JSON.stringify(body);\n        }\n        const response = await fetch(url, options);\n        setLoading(50);\n        console.log(response);\n        if (!response.ok) {\n          throw new Error(`Error: ${response.status} ${response.statusText}`);\n        }\n        const result = await response.json();\n        setLoading(100);\n        console.log(result);\n        if (result && result.message) {\n          console.log(action);\n          if (action && action === 'LOGIN') {\n            dispatch(authAction.login(result));\n            if (result.role === 'admin') navigate('/admin/salon-booking/home');else navigate('/salon-booking/userhome');\n            //   window.location.reload()  \n          }\n          if (action && action === 'GET_PROFILE') dispatch(authAction.setProfile(result.message));\n          if (action && action === 'GET_All_SERVICES') dispatch(servicesAction.getServices(result.message));\n          if (action && action === 'ADD_SERVICE') dispatch(servicesAction.addService(result.services));\n          if (action && action === 'GET_All_STAFS') dispatch(servicesAction.getStaffs(result.message));\n          if (action && action === 'ADD_STAF') dispatch(servicesAction.addStaf(result.staf));\n          if (action && action === 'GET_NOTIFICATIONS') dispatch(servicesAction.getNotifications(result.message));\n          if (action && action === 'GET_FEEDBACKS') dispatch(servicesAction.getFeedbacks(result.message));\n          setMessage(result.message);\n          setData(result);\n        } else if (result && result.error) {\n          setError(result.error);\n        }\n      } catch (err) {\n        console.log(err);\n        setError(err.message);\n      } finally {\n        setLoading(null);\n      }\n    };\n    if (url) {\n      fetchData();\n    }\n  }, method === 'GET' ? [url] : [url, method, headers, body]);\n  return {\n    data,\n    message,\n    error,\n    loading\n  };\n};\n_s(useFetch, \"OJJmZPpUg2oGGRE+MiL0ZIikRvE=\", false, function () {\n  return [useDispatch, useNavigate];\n});\nexport default useFetch;","map":{"version":3,"names":["React","useState","useEffect","authAction","servicesAction","useDispatch","useNavigate","useFetch","fetchData","_s","data","setData","error","setError","message","setMessage","loading","setLoading","dispatch","navigate","console","log","url","method","headers","body","action","options","JSON","stringify","response","fetch","ok","Error","status","statusText","result","json","login","role","setProfile","getServices","addService","services","getStaffs","addStaf","staf","getNotifications","getFeedbacks","err"],"sources":["C:/Users/sumuka/Desktop/Backend Final Project/Salon-Booking-App/src/FetchUrl/useFetch.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {authAction} from '../store/authenticationSlice'\r\nimport {servicesAction} from '../store/servicesSlice'\r\nimport {useDispatch} from 'react-redux'\r\nimport {useNavigate} from 'react-router-dom'\r\nconst useFetch = (fetchData) => {\r\n    const [data, setData] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [message, setMessage] = useState(null);\r\n    const [loading, setLoading] = useState(null);\r\n    const dispatch=useDispatch()\r\n    const navigate=useNavigate()\r\n    console.log(fetchData)\r\n    \r\n    const url=fetchData.url\r\n    const method=fetchData.method\r\n    const headers=fetchData.headers\r\n    const body=fetchData.body\r\n    const action=fetchData.action\r\n\r\n    \r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setLoading(10);\r\n            setError(null); \r\n        console.log(url)\r\n            try {\r\n                const options = {\r\n                    method,\r\n                    headers,\r\n                };\r\n\r\n                if (body && method !== 'GET') {\r\n                    options.body = JSON.stringify(body); \r\n                }\r\n\r\n                const response = await fetch(url, options);\r\n                setLoading(50)\r\n               console.log(response)\r\n                if (!response.ok) {\r\n                    throw new Error(`Error: ${response.status} ${response.statusText}`);\r\n                }\r\n\r\n                const result = await response.json();\r\n                setLoading(100)\r\n                console.log(result)\r\n                if(result && result.message)\r\n                {\r\n                    console.log(action)\r\n                    if(action && action==='LOGIN')\r\n                     {\r\n                            \r\n                           dispatch(authAction.login(result))\r\n                           if(result.role==='admin')\r\n                            navigate('/admin/salon-booking/home')\r\n                           else\r\n                              navigate('/salon-booking/userhome')\r\n                        //   window.location.reload()  \r\n                     } \r\n                     if(action && action==='GET_PROFILE')\r\n                        dispatch(authAction.setProfile(result.message))\r\n                     if(action && action==='GET_All_SERVICES')\r\n                        dispatch(servicesAction.getServices(result.message))\r\n                     if(action && action==='ADD_SERVICE')\r\n                        dispatch(servicesAction.addService(result.services))\r\n                     if(action && action==='GET_All_STAFS')\r\n                        dispatch(servicesAction.getStaffs(result.message))\r\n                     if(action && action==='ADD_STAF')\r\n                        dispatch(servicesAction.addStaf(result.staf))\r\n                     if(action && action==='GET_NOTIFICATIONS')\r\n                        dispatch(servicesAction.getNotifications(result.message))\r\n                     if(action && action==='GET_FEEDBACKS')\r\n                        dispatch(servicesAction.getFeedbacks(result.message))\r\n\r\n                        setMessage(result.message) \r\n                        setData(result); \r\n                }\r\n                else if(result && result.error ){\r\n                    setError(result.error)\r\n                }\r\n                \r\n                \r\n\r\n               \r\n            } catch (err) {\r\n                console.log(err)\r\n                setError(err.message);\r\n                \r\n            } finally {\r\n                setLoading(null);\r\n            }\r\n        };\r\n\r\n        if (url) {\r\n            fetchData(); \r\n        }\r\n    }, method==='GET'?[url]:[url, method, headers, body]); \r\n    return {data,message,error,loading}\r\n\r\n}\r\n\r\nexport default useFetch;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}