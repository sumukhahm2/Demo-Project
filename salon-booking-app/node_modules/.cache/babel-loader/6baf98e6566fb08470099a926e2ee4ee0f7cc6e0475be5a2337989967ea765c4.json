{"ast":null,"code":"import React,{useState,useEffect}from'react';import{authAction}from'../store/authenticationSlice';import{servicesAction}from'../store/servicesSlice';import{useDispatch}from'react-redux';import{useNavigate}from'react-router-dom';const useFetch=fetchData=>{const[data,setData]=useState(null);const[error,setError]=useState(null);const[message,setMessage]=useState(null);const[loading,setLoading]=useState(null);const dispatch=useDispatch();const navigate=useNavigate();console.log(fetchData);const url=fetchData.url;const method=fetchData.method;const headers=fetchData.headers;const body=fetchData.body;const action=fetchData.action;useEffect(()=>{const fetchData=async()=>{setLoading(10);setError(null);console.log(url);try{const options={method,headers};if(body&&method!=='GET'){options.body=JSON.stringify(body);}const response=await fetch(url,options);setLoading(50);console.log(response);if(!response.ok){throw new Error(\"Error: \".concat(response.status,\" \").concat(response.statusText));}const result=await response.json();setLoading(100);console.log(result);if(result&&result.message){console.log(action);if(action&&action==='LOGIN'){dispatch(authAction.login(result));if(result.role==='admin')navigate('/admin/salon-booking/home');else navigate('/salon-booking/userhome');//   window.location.reload()  \n}if(action&&action==='GET_PROFILE')dispatch(authAction.setProfile(result.message));if(action&&action==='GET_All_SERVICES')dispatch(servicesAction.getServices(result.message));if(action&&action==='ADD_SERVICE')dispatch(servicesAction.addService(result.services));if(action&&action==='GET_All_STAFS')dispatch(servicesAction.getStaffs(result.message));if(action&&action==='ADD_STAF')dispatch(servicesAction.addStaf(result.staf));if(action&&action==='GET_NOTIFICATIONS')dispatch(servicesAction.getNotifications(result.message));if(action&&action==='GET_FEEDBACKS')dispatch(servicesAction.getFeedbacks(result.message));setMessage(result.message);setData(result);}else if(result&&result.error){setError(result.error);}}catch(err){console.log(err);setError(err.message);}finally{setLoading(null);}};if(url){fetchData();}},method==='GET'?[url]:[url,method,headers,body]);return{data,message,error,loading};};export default useFetch;","map":{"version":3,"names":["React","useState","useEffect","authAction","servicesAction","useDispatch","useNavigate","useFetch","fetchData","data","setData","error","setError","message","setMessage","loading","setLoading","dispatch","navigate","console","log","url","method","headers","body","action","options","JSON","stringify","response","fetch","ok","Error","concat","status","statusText","result","json","login","role","setProfile","getServices","addService","services","getStaffs","addStaf","staf","getNotifications","getFeedbacks","err"],"sources":["C:/Users/sumuka/Desktop/Backend Final Project/Salon-Booking-App/src/FetchUrl/useFetch.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {authAction} from '../store/authenticationSlice'\r\nimport {servicesAction} from '../store/servicesSlice'\r\nimport {useDispatch} from 'react-redux'\r\nimport {useNavigate} from 'react-router-dom'\r\nconst useFetch = (fetchData) => {\r\n    const [data, setData] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [message, setMessage] = useState(null);\r\n    const [loading, setLoading] = useState(null);\r\n    const dispatch=useDispatch()\r\n    const navigate=useNavigate()\r\n    console.log(fetchData)\r\n    \r\n    const url=fetchData.url\r\n    const method=fetchData.method\r\n    const headers=fetchData.headers\r\n    const body=fetchData.body\r\n    const action=fetchData.action\r\n\r\n    \r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setLoading(10);\r\n            setError(null); \r\n        console.log(url)\r\n            try {\r\n                const options = {\r\n                    method,\r\n                    headers,\r\n                };\r\n\r\n                if (body && method !== 'GET') {\r\n                    options.body = JSON.stringify(body); \r\n                }\r\n\r\n                const response = await fetch(url, options);\r\n                setLoading(50)\r\n               console.log(response)\r\n                if (!response.ok) {\r\n                    throw new Error(`Error: ${response.status} ${response.statusText}`);\r\n                }\r\n\r\n                const result = await response.json();\r\n                setLoading(100)\r\n                console.log(result)\r\n                if(result && result.message)\r\n                {\r\n                    console.log(action)\r\n                    if(action && action==='LOGIN')\r\n                     {\r\n                            \r\n                           dispatch(authAction.login(result))\r\n                           if(result.role==='admin')\r\n                            navigate('/admin/salon-booking/home')\r\n                           else\r\n                              navigate('/salon-booking/userhome')\r\n                        //   window.location.reload()  \r\n                     } \r\n                     if(action && action==='GET_PROFILE')\r\n                        dispatch(authAction.setProfile(result.message))\r\n                     if(action && action==='GET_All_SERVICES')\r\n                        dispatch(servicesAction.getServices(result.message))\r\n                     if(action && action==='ADD_SERVICE')\r\n                        dispatch(servicesAction.addService(result.services))\r\n                     if(action && action==='GET_All_STAFS')\r\n                        dispatch(servicesAction.getStaffs(result.message))\r\n                     if(action && action==='ADD_STAF')\r\n                        dispatch(servicesAction.addStaf(result.staf))\r\n                     if(action && action==='GET_NOTIFICATIONS')\r\n                        dispatch(servicesAction.getNotifications(result.message))\r\n                     if(action && action==='GET_FEEDBACKS')\r\n                        dispatch(servicesAction.getFeedbacks(result.message))\r\n\r\n                        setMessage(result.message) \r\n                        setData(result); \r\n                }\r\n                else if(result && result.error ){\r\n                    setError(result.error)\r\n                }\r\n                \r\n                \r\n\r\n               \r\n            } catch (err) {\r\n                console.log(err)\r\n                setError(err.message);\r\n                \r\n            } finally {\r\n                setLoading(null);\r\n            }\r\n        };\r\n\r\n        if (url) {\r\n            fetchData(); \r\n        }\r\n    }, method==='GET'?[url]:[url, method, headers, body]); \r\n    return {data,message,error,loading}\r\n\r\n}\r\n\r\nexport default useFetch;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}