{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sumuka\\\\Desktop\\\\Backend Final Project\\\\Salon-Booking-App\\\\src\\\\components\\\\Home\\\\AdminNotifications.js\",\n  _s = $RefreshSig$();\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport useFetch from '../../FetchUrl/useFetch';\nimport { useState } from 'react';\nimport CustomTable from './CustomTable';\nimport { servicesAction } from '../../store/servicesSlice';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdminNotifications = () => {\n  _s();\n  const [fetchData, setFetchData] = useState({\n    url: 'http://13.61.4.12:3000/salon-booking/getnotification',\n    method: 'GET',\n    body: null,\n    headers: {\n      'Authorization': localStorage.getItem('token'),\n      'Admin': localStorage.getItem('admin')\n    },\n    action: 'GET_NOTIFICATIONS'\n  });\n  const dispatch = useDispatch();\n  useFetch(fetchData);\n  useFetch({\n    url: 'http://13.61.4.12:3000/salon-booking/getadminStaf',\n    method: 'GET',\n    headers: {\n      'Authorization': localStorage.getItem('token'),\n      'Admin': localStorage.getItem('admin')\n    },\n    body: null,\n    action: 'GET_All_STAFS'\n  });\n  const stafs = useSelector(state => state.service.stafs);\n  const [staftable, setStafTable] = useState(null);\n  const notifications = useSelector(state => state.service.notifications);\n  console.log(notifications);\n  const handleAppointment = data => {\n    console.log(data);\n    const updateData = {\n      status: 'Success',\n      id: data.notificationId,\n      stafId: data.id,\n      stafname: data.name,\n      time: data.availabality,\n      email: localStorage.getItem('email')\n    };\n    setFetchData({\n      url: 'http://13.61.4.12:3000/salon-booking/update-appointment',\n      method: 'POST',\n      body: updateData,\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': localStorage.getItem('token'),\n        'Admin': localStorage.getItem('admin')\n      },\n      action: null\n    });\n    dispatch(servicesAction.updateNotification({\n      status: 'Success',\n      id: data.notificationId\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"fs-1\",\n        children: \"Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }, this), notifications.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No Notifictions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 42\n      }, this), notifications.map(notification => /*#__PURE__*/_jsxDEV(Row, {\n        className: \"text-dark bg-light rounded p-2 d-flex mb-2 justify-conent-center w-auto align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"fs-5 w-75 fw-bold\",\n          children: [notification.user.username, \" has been  \", notification.status === 'Canceled' ? 'Canceled' : 'Booked', \" An Appointment for \", notification.appointmentname]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-25 \",\n          children: [notification.status === 'Pending' && /*#__PURE__*/_jsxDEV(Button, {\n            className: \"bg-info text-dark fw-bold\",\n            onClick: () => setStafTable(notification),\n            children: \"Appoint Staf\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 57\n          }, this), notification.status === 'Success' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"fw-bold\",\n              children: \" Appointment Booked\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 59\n            }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn-success\",\n              children: \"Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 106\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 19\n        }, this)]\n      }, notification.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 47\n      }, this)), staftable && /*#__PURE__*/_jsxDEV(CustomTable, {\n        data: stafs,\n        id: staftable.id,\n        handleAppointment: handleAppointment,\n        onClose: () => setStafTable(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n_s(AdminNotifications, \"xNV8trjcaCgqmD49POnxw3BITbY=\", false, function () {\n  return [useDispatch, useFetch, useFetch, useSelector, useSelector];\n});\n_c = AdminNotifications;\nexport default AdminNotifications;\nvar _c;\n$RefreshReg$(_c, \"AdminNotifications\");","map":{"version":3,"names":["Container","Row","Col","Button","useSelector","useDispatch","useFetch","useState","CustomTable","servicesAction","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminNotifications","_s","fetchData","setFetchData","url","method","body","headers","localStorage","getItem","action","dispatch","stafs","state","service","staftable","setStafTable","notifications","console","log","handleAppointment","data","updateData","status","id","notificationId","stafId","stafname","name","time","availabality","email","updateNotification","children","className","fileName","_jsxFileName","lineNumber","columnNumber","length","map","notification","user","username","appointmentname","onClick","onClose","_c","$RefreshReg$"],"sources":["C:/Users/sumuka/Desktop/Backend Final Project/Salon-Booking-App/src/components/Home/AdminNotifications.js"],"sourcesContent":["\r\n\r\nimport {Container,Row,Col,Button} from 'react-bootstrap'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport useFetch from '../../FetchUrl/useFetch'\r\nimport {useState} from 'react'\r\nimport CustomTable from './CustomTable'\r\nimport {servicesAction} from '../../store/servicesSlice'\r\n\r\nconst AdminNotifications=()=>{\r\n\r\n    const [fetchData,setFetchData]=useState({\r\n        url:'http://13.61.4.12:3000/salon-booking/getnotification',\r\n        method:'GET',\r\n        body:null,\r\n        headers:{\r\n            'Authorization':localStorage.getItem('token'),\r\n            'Admin':localStorage.getItem('admin')\r\n        },\r\n        action:'GET_NOTIFICATIONS'\r\n        \r\n\r\n    })\r\n   const dispatch=useDispatch()\r\n    useFetch(fetchData)\r\n    useFetch({\r\n        url:'http://13.61.4.12:3000/salon-booking/getadminStaf',\r\n        method:'GET',\r\n        headers:{\r\n            'Authorization':localStorage.getItem('token'),\r\n            'Admin':localStorage.getItem('admin')\r\n        },\r\n        body:null,\r\n        action:'GET_All_STAFS'\r\n      })\r\n\r\n      const stafs=useSelector((state)=>state.service.stafs)\r\n\r\n\r\n    const [staftable,setStafTable]=useState(null)\r\n\r\n    const notifications=useSelector(state=>state.service.notifications)\r\n    console.log(notifications)\r\n\r\n    const handleAppointment=(data)=>{\r\n      console.log(data)\r\n      const updateData={\r\n        status:'Success',\r\n        id:data.notificationId,\r\n        stafId:data.id,\r\n        stafname:data.name,\r\n        time:data.availabality,\r\n        email:localStorage.getItem('email')\r\n    }\r\n      setFetchData(\r\n      {\r\n        url:'http://13.61.4.12:3000/salon-booking/update-appointment',\r\n        method:'POST',\r\n        body:updateData,\r\n        headers:{\r\n            'Content-Type':'application/json',\r\n            'Authorization':localStorage.getItem('token'),\r\n            'Admin':localStorage.getItem('admin')\r\n        },\r\n        action:null\r\n        \r\n\r\n    })\r\n      dispatch(servicesAction.updateNotification({status:'Success',id:data.notificationId}))\r\n    }\r\n    return(\r\n        <>\r\n          <Container className='mt-5'>\r\n              <p className='fs-1'>Notifications</p>\r\n            {notifications.length===0 && <p>No Notifictions</p>}\r\n             {notifications.map(notification=><Row key={notification.id} className='text-dark bg-light rounded p-2 d-flex mb-2 justify-conent-center w-auto align-items-center'>\r\n                  <p className='fs-5 w-75 fw-bold'>{notification.user.username} has been  {notification.status==='Canceled'?'Canceled':'Booked'} An Appointment for {notification.appointmentname}</p>\r\n                  <div className='w-25 '>\r\n                   { notification.status==='Pending' && <Button className='bg-info text-dark fw-bold' onClick={()=>setStafTable(notification)}>Appoint Staf</Button>}\r\n                    {notification.status==='Success' && <><p className='fw-bold'> Appointment Booked</p> <Button className='btn-success'>Details</Button></>}\r\n                  </div>\r\n              </Row>)} \r\n              {staftable && <CustomTable data={stafs} id={staftable.id}  handleAppointment={handleAppointment} onClose={()=>setStafTable(null)}/>}\r\n             \r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default AdminNotifications"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}